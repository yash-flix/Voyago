<% layout("/layouts/boilerplate.ejs") %>

<style>
  body {
    background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%);
    min-height: 100vh;
    font-family: "Plus Jakarta Sans", sans-serif;
    font-optical-sizing: auto;
    font-weight: 400;
    overflow-x: hidden;
    margin: 0;
    padding: 0;
  }

  .error-container {
    position: relative;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2rem;
  }

  #globe-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    pointer-events: none;
    opacity: 0.3;
  }

  .error-card {
    position: relative;
    z-index: 10;
    background: rgba(30, 41, 59, 0.9);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 24px;
    padding: 4rem 3rem;
    text-align: center;
    max-width: 600px;
    width: 100%;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.5);
  }

  .error-icon {
    width: 120px;
    height: 120px;
    margin: 0 auto 2rem auto;
    background: linear-gradient(135deg, #ef4444, #dc2626);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    animation: pulse 2s ease-in-out infinite;
  }

  .error-icon svg {
    width: 60px;
    height: 60px;
    color: white;
  }

  .error-code {
    font-size: 4rem;
    font-weight: 900;
    background: linear-gradient(135deg, #ef4444 0%, #f87171 50%, #fca5a5 100%);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    margin-bottom: 1rem;
    text-shadow: 0 0 30px rgba(239, 68, 68, 0.3);
  }

  .error-title {
    font-size: 2rem;
    font-weight: 700;
    color: rgba(255, 255, 255, 0.95);
    margin-bottom: 1rem;
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  }

  .error-message {
    font-size: 1.1rem;
    color: rgba(255, 255, 255, 0.7);
    margin-bottom: 3rem;
    line-height: 1.6;
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  }

  .error-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .btn-primary {
    background: linear-gradient(135deg, #22d3ee, #06b6d4);
    color: white;
    padding: 1rem 2rem;
    border-radius: 50px;
    text-decoration: none;
    font-weight: 600;
    font-size: 1rem;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
    box-shadow: 0 10px 25px rgba(34, 211, 238, 0.3);
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 15px 35px rgba(34, 211, 238, 0.4);
    color: white;
    text-decoration: none;
  }

  .btn-secondary {
    background: rgba(255, 255, 255, 0.1);
    color: white;
    padding: 1rem 2rem;
    border-radius: 50px;
    text-decoration: none;
    font-weight: 600;
    font-size: 1rem;
    transition: all 0.3s ease;
    border: 1px solid rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(10px);
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .btn-secondary:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: translateY(-2px);
    color: white;
    text-decoration: none;
  }

  .error-details {
    margin-top: 2rem;
    padding: 1rem;
    background: rgba(239, 68, 68, 0.1);
    border: 1px solid rgba(239, 68, 68, 0.2);
    border-radius: 12px;
    font-family: monospace;
    font-size: 0.9rem;
    color: rgba(255, 255, 255, 0.8);
    text-align: left;
  }

  @keyframes pulse {
    0%, 100% { 
      transform: scale(1);
      box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.4);
    }
    50% { 
      transform: scale(1.05);
      box-shadow: 0 0 0 10px rgba(239, 68, 68, 0);
    }
  }

  @media (max-width: 768px) {
    .error-container {
      padding: 1rem;
    }

    .error-card {
      padding: 2rem 1.5rem;
    }

    .error-code {
      font-size: 3rem;
    }

    .error-title {
      font-size: 1.5rem;
    }

    .error-actions {
      flex-direction: column;
      align-items: center;
    }

    .btn-primary, .btn-secondary {
      width: 100%;
      max-width: 250px;
    }
  }
</style>

<body>
  <div class="error-container">
    <!-- Subtle Globe Background -->
    <div id="globe-container"></div>

    <!-- Error Content -->
    <div class="error-card">
      <div class="error-icon">
        <svg fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
        </svg>
      </div>

      <h1 class="error-code"><%= typeof statusCode !== 'undefined' ? statusCode : '404' %></h1>
      
      <h2 class="error-title">
        <% if (typeof statusCode !== 'undefined' && statusCode === 404) { %>
          Page Not Found
        <% } else if (typeof statusCode !== 'undefined' && statusCode === 500) { %>
          Server Error
        <% } else { %>
          Something Went Wrong
        <% } %>
      </h2>

      <p class="error-message">
        <% if (typeof message !== 'undefined') { %>
          <%= message %>
        <% } else { %>
          We couldn't find the page you're looking for. It might have been moved, deleted, or you entered the wrong URL.
        <% } %>
      </p>

      <div class="error-actions">
        <a href="/" class="btn-primary">Go Home</a>
        <a href="/listings" class="btn-secondary">View Listings</a>
      </div>

      <% if (typeof error !== 'undefined' && error.stack && process.env.NODE_ENV !== 'production') { %>
        <div class="error-details">
          <strong>Error Details (Development Mode):</strong><br>
          <%= error.stack %>
        </div>
      <% } %>
    </div>
  </div>

  <!-- Subtle Globe Animation -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
  <script>
    let scene, camera, renderer, globe;

    function initErrorGlobe() {
      scene = new THREE.Scene();
      camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);
      camera.position.set(200, 50, 400);
      
      const container = document.getElementById('globe-container');
      renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });
      renderer.setSize(window.innerWidth, window.innerHeight);
      renderer.setClearColor(0x000000, 0);
      container.appendChild(renderer.domElement);
      
      // Very subtle globe
      const geometry = new THREE.SphereGeometry(150, 32, 32);
      const material = new THREE.MeshBasicMaterial({
        color: 0x444444,
        wireframe: true,
        transparent: true,
        opacity: 0.1
      });
      
      globe = new THREE.Mesh(geometry, material);
      scene.add(globe);
      
      animate();
    }

    function animate() {
      requestAnimationFrame(animate);
      if (globe) {
        globe.rotation.y += 0.001;
      }
      renderer.render(scene, camera);
    }

    window.addEventListener('load', function() {
      setTimeout(initErrorGlobe, 100);
    });

    window.addEventListener('resize', function() {
      if (camera && renderer) {
        camera.aspect = window.innerWidth / window.innerHeight;
        camera.updateProjectionMatrix();
        renderer.setSize(window.innerWidth, window.innerHeight);
      }
    });
  </script>
</body>